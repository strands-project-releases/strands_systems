<?xml version="1.0"?>
<launch>
  <arg name="with_chest_xtion" default="false"/>
  <arg name="chest_xtion_name" default="chest_xtion"/>
  <arg name="chest_xtion_machine" default="localhost"/>
  <arg name="chest_xtion_user" default=""/>

  <arg name="map"/>
  <arg name="with_no_go_map" default="false"/>
  <arg name="no_go_map"/>
  <arg name="with_mux" default="false" />
  <arg name="topological_map"/>
  <arg name="mon_nav_config_file" default="$(find strands_recovery_behaviours)/config/monitored_nav_config.yaml"/>
  <arg name="z_stair_threshold" default="0.1"/>
  <arg name="z_obstacle_threshold" default="0.15"/>
  <arg name="with_head_xtion" default="false"/>

  <arg name="with_site_movebase_params" default="false"/>
  <arg name="site_movebase_params" default=""/>

  <arg name="machine" default="localhost" />
  <arg name="user" default="" />

  <!-- NOW when launching in a remote mode it will need the ROS_ENV_LOADER set if not it will leave it empty -->
  <machine name="$(arg machine)" address="$(arg machine)" env-loader="$(optenv ROS_ENV_LOADER )" user="$(arg user)" default="true" />

  <!-- strands_movebase -->
  <include file="$(find strands_movebase)/launch/movebase.launch">
    <arg name="machine"  value="$(arg machine)"/>
    <arg name="user"  value="$(arg user)"/>

    <arg name="with_chest_xtion" value="$(arg with_chest_xtion)"/>
    <arg name="chest_xtion_name" value="$(arg chest_xtion_name)"/>
    <arg name="chest_xtion_machine" value="$(arg chest_xtion_machine)"/>
    <arg name="chest_xtion_user" value="$(arg chest_xtion_user)"/>

    <arg name="map" value="$(arg map)"/>
    <arg name="with_no_go_map" value="$(arg with_no_go_map)"/>
    <arg name="with_mux" value="$(arg with_mux)"/>
    <arg name="no_go_map" value="$(arg no_go_map)"/>
    
    <arg name="z_stair_threshold" value="$(arg z_stair_threshold)"/>
    <arg name="z_obstacle_threshold" value="$(arg z_obstacle_threshold)"/>
    <arg name="with_head_xtion" value="$(arg with_head_xtion)"/>

    <arg name="with_site_movebase_params" value="$(arg with_site_movebase_params)"/>
    <arg name="site_movebase_params" value="$(arg site_movebase_params)"/>
  </include>

  <!--- Docking -->
  <include unless="$(arg with_mux)" file="$(find scitos_docking)/launch/charging.launch">
    <arg name="machine"  value="$(arg machine)"/>
    <arg name="user"  value="$(arg user)"/>

  </include>
  <include if="$(arg with_mux)" file="$(find scitos_docking)/launch/charging_mux.launch">
    <arg name="machine"  value="$(arg machine)"/>
    <arg name="user"  value="$(arg user)"/>
  </include>

  <!-- Ramp Climbing -->
  <include file="$(find ramp_climb)/launch/rampclimbing_mux.launch">
      <arg name="machine"  value="$(arg machine)"/>
      <arg name="user"  value="$(arg user)"/>
  </include>

  <!-- Backtrack server -->
  <include file="$(find backtrack_behaviour)/launch/backtrack.launch"/> 

  <!--- Topological Navigation (includes monitored_navigation) -->
  <include file="$(find topological_navigation)/launch/topological_navigation.launch">
    <arg name="machine"  value="$(arg machine)"/>
    <arg name="user"  value="$(arg user)"/>
    <arg name="map" value="$(arg topological_map)"/>
    <arg name="mon_nav_config_file" value="$(arg mon_nav_config_file)"/>
  </include>

  <node name="odometry_mileage" pkg="odometry_mileage" type="odometry_mileage"/>
  <node name="door_pass_node" pkg="door_pass" type="door_pass.py" output="screen" />
</launch>
